#!/usr/bin/env python3
# import argparse
# import binascii
import difflib

with open('badchars-remote.txt') as f:
    badchars = f.read().split()
    badchars_len = len(badchars)

goodchars = ["{0:{1}X}".format(i, 2) for i in range(0x10, 256)]
goodchars_len = len(goodchars)

# if goodchars_len != badchars_len:
#     print("Goodchars len: {}\nBadchars len: {}".format(
#         goodchars_len, badchars_len))
# for good, bad in zip(goodchars, badchars):
#     print('\n{} became {}'.format(good, bad), end='')
#     if good != bad:
#         # print('{} became {}'.format(good, bad))
#         print('***', end='')

h = difflib.HtmlDiff()
htmldiff = h.make_file(
    goodchars,
    badchars,
    fromdesc='sent chars',
    todesc='remote chars')
with open('diff.html', 'w') as f:
    f.write(htmldiff)


# def main():
#     parser = argparse.ArgumentParser()
#     parser.add_argument('-l', '--len', type=int, default=DEFAULT_LEN)
#     parser.add_argument('-n', '--needle')
#     parser.add_argument('-o', '--outfile')
#     parser.add_argument('--big-endian',
#                         action='store_true',
#                         help="If pattern is in hex, don't invert")
#     parser.add_argument('-d', '--debug', action='store_true')
#     args = parser.parse_args()
#
#     if args.debug:
#         log.setLevel(logging.DEBUG)
#
#
# if __name__ == '__main__':
#     main()
